# This workflow will build a docker container, and publish it to Google Container Registry.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/GoogleCloudPlatform/github-actions/tree/master/example-workflows/gke

name: Build and Publish Docker Image

on:
  push:
    branches:
    - 'main'

env:
  GOOGLE_PROJECT: dev-drm-admin-5548
  IMAGE: flex

concurrency: ci-${{ github.ref }}

jobs:
  setup-build-publish:
    name: Setup, Build, Publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Auth GCP   
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_DEV_DRM_SA_KEY }}'

    - name: Setup GCP      
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ env.GOOGLE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "eu.gcr.io/$GOOGLE_PROJECT/$IMAGE:$GITHUB_SHA" .
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "eu.gcr.io/$GOOGLE_PROJECT/$IMAGE:$GITHUB_SHA"
     
    # Call the API to trigger the workflow that updates the version in DRM_Apps_Deply 
    - name: Deploy
      uses: sknups/deploy-action@v1.2
      with:
        image: ${{ env.IMAGE }}
        tag: ${{ github.sha }}
        auth: ${{ secrets.DEPLOY_TOKEN }}
        url: ${{ secrets.DEPLOY_API_URL }}

